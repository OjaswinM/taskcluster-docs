
style.
  .schemabox .shortfield {
    width: 13ex;
  }

  .schemabox .short:hover {
    width: initial;
    white-space: normal;
    max-width: 40em;
    max-height: initial;
    border: 1px solid #444;
    margin-top: -1px;
    margin-left: -1px;
  }
  .schemabox .short {
    white-space: nowrap;
    width: 12ex;
    min-width: 12ex;
    overflow: hidden;
    text-overflow: ellipsis;
    display: inline-block;
    position: absolute;
  }

  .schemabox .normaltext {
    font-family: Roboto, 'Helvetica Neue', Helvetica, Arial, sans-serif;
  }

  .schemabox .lighter {
    color: #666;
  }

  .schemabox .enum {
    padding-left: 10px;
  }

  .schemabox .indent {
    padding-left: 2em;
  }

  .schemabox .indent table {
    border-left: 1px solid #ddd;
    border-bottom: 1px solid #ddd;
  }

  .schemabox > table {
    font-family: Menlo, Monaco, Consolas, "Courier New", monospace;
  }

  .schemabox table .frow > td {
    border-bottom: 0;
  }

  .schemabox table .srow > td {
    border-top: 0;
  }

  .schemabox .required:after {
    content: '*';
    vertical-align: super;
    font-size: 0.7em;
    color: red;
    display: inline-block;
    position: absolute;
  }

  .schemabox .required:hover:after {
    content: 'required property';
    background: #fff;
    font-size: 0.8em;
  }

  .schemabox .schema-pattern {
    font-size: 0.7em !important;
  }

  .schemabox .date-time {
    color: green;
  }

  .schemabox .uri {
    color: blue;
  }

  .schemabox .email {
    color: purple;
  }

  .schemabox .ipv4, .schemabox .ipv6, .schemabox .hostname {
    color: orange;
  }

mixin normalrow(schema, name, type, requiredList)
  - var required = requiredList.indexOf(name) !== -1
  if schema.$ref
    td(colspan=4)
      Cirular $ref: #{schema.$ref} (follow 'source' link above to view)
  else
    td.shortfield
      span(class=required ? 'required' : '')= name
    td.shortfield.lighter
      -
        var limits = null;
        var min = schema.minLength || schema.minItems || schema.minimum;
        var max = schema.maxLength || schema.maxItems || schema.maximum;
        if (min || max) {
          limits = `[${min || 0}:${max || '∞'}]`;
        }
      | #{type || schema.type}#{limits}
      if schema.default
        br
        span.small default: #{schema.default}
    td.shortfield
      if schema.pattern
        code.short.schema-pattern= schema.pattern
      else if schema.format
        span(class=schema.format)= schema.format
      else if schema.enum
        ul.enum
          each val in schema.enum
            li
              code.short.schema-pattern= val
    td.normaltext !{marked(schema.description || '')}

mixin combination(schema, name, subs, sort)
  tr.frow
    +normalrow(schema, name, sort, [])
  tr.srow
    td.indent(colspan=4)
      table.table.table-condensed
        each sub in subs
          - sub.type = sub.type || schema.type
          - sub.format = sub.format || schema.format
          case sub.type
            when "object"
              tr.frow
                +normalrow(sub, sub.title, 'Object of', [])
              tr.srow
                td.indent(colspan=4)
                  table.table.table-condensed
                    +schemarow(sub, sub.title, [])
            default
              tr
                +normalrow(sub, sub.title, sub.type, [])

mixin schemarow(schema, name, requiredList)
  - requiredList = schema.required || requiredList || []
  if schema.items
    tr.frow
      +normalrow(schema, name, 'Array of', requiredList)
    tr.srow
      td.indent(colspan=4)
        table.table.table-condensed
          +schemarow(schema.items, schema.items.title, requiredList)
  else if schema.properties
    each prop, name in schema.properties
      if prop.type && prop.type === "object"
        tr.frow
          +normalrow(prop, name, 'Object of', requiredList)
        tr.srow
          td.indent(colspan=4)
            table.table.table-condensed
              +schemarow(prop, name, requiredList)
      else
        +schemarow(prop, name, requiredList)
    if schema.additionalProperties
      tr
        td(colspan=4)
          | <em>Additional properties are permitted</em>
  else if schema.additionalProperties
    +schemarow(schema.additionalProperties, '<string>', requiredList)
  else if schema.anyOf
    +combination(schema, schema.title || name, schema.anyOf, 'Any of')
  else if schema.allOf
    +combination(schema, schema.title || name, schema.allOf, 'All of')
  else if schema.oneOf
    +combination(schema, schema.title || name, schema.oneOf, 'One of')
  else if schema.type === "object"
    tr
      td(colspan=4) Anything ¯\_(ツ)_/¯
  else
    tr.frow
      +normalrow(schema, name, null, requiredList)

mixin schemabox(schema)
  .schemabox.panel.panel-default
    .panel-heading
      if schema.title
        h4.no-anchor
          | #{schema.title}
          if schema.$id || schema.id
            | 
            small
              a(href=schema.$id || schema.id, target='_blank', rel='noopener noreferrer')
                | (source)
        | !{marked(schema.description || '')}
    table.table
      +schemarow(schema)
